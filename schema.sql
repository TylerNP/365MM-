create table
  public.available_streaming (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    service_id bigint not null,
    movie_id bigint not null,
    constraint available_streaming_pkey primary key (id),
    constraint unique_service_movie unique (service_id, movie_id),
    constraint available_streaming_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade,
    constraint available_streaming_service_id_fkey foreign key (service_id) references streaming_services (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.cast_and_crew (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    firstname text null,
    lastname text null,
    constraint cast_and_crew_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.genres (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    name text not null,
    description text null,
    constraint genres_pkey primary key (id),
    constraint genres_name_key unique (name)
  ) tablespace pg_default;

create table
  public.groups (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    name text not null,
    description text null,
    constraint groups_pkey primary key (id),
    constraint groups_name_key unique (name)
  ) tablespace pg_default;

create table
  public.groups_joined (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    user_id bigint not null,
    group_id bigint not null,
    role text null,
    constraint groups_joined_pkey primary key (id),
    constraint unique_user_group unique (user_id, group_id),
    constraint groups_joined_group_id_fkey foreign key (group_id) references groups (id) on update cascade on delete cascade,
    constraint groups_joined_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.liked_genres (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    user_id bigint not null,
    genre_id bigint not null,
    score bigint not null,
    constraint liked_genres_pkey primary key (id),
    constraint unique_user_genre unique (user_id, genre_id),
    constraint liked_genres_genre_id_fkey foreign key (genre_id) references genres (id) on update cascade on delete cascade,
    constraint liked_genres_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.liked_genres_groups (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    genre_id bigint not null,
    group_id bigint not null,
    score bigint not null,
    constraint liked_genres_groups_pkey primary key (id),
    constraint unique_group_genre unique (group_id, genre_id),
    constraint liked_genres_groups_genre_id_fkey foreign key (genre_id) references genres (id) on update cascade on delete cascade,
    constraint liked_genres_groups_group_id_fkey foreign key (group_id) references groups (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.liked_movies (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    user_id bigint not null,
    liked boolean not null,
    constraint liked_movies_pkey primary key (id),
    constraint unique_movie_user_liked unique (movie_id, user_id, liked),
    constraint liked_movies_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade,
    constraint liked_movies_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.movie_genres (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    genre_id bigint not null,
    constraint movie_genres_pkey primary key (id),
    constraint unique_movie_genre unique (movie_id, genre_id),
    constraint movie_genres_genre_id_fkey foreign key (genre_id) references genres (id) on update cascade on delete cascade,
    constraint movie_genres_movie_id_fkey1 foreign key (movie_id) references movies (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.movie_languages (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    language text null,
    constraint movie_languages_pkey primary key (id),
    constraint unique_movie_language unique (movie_id, language),
    constraint movie_languages_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.movies (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    name text not null default ''::text,
    average_rating bigint null,
    budget bigint null,
    box_office bigint null,
    duration bigint null,
    release_date timestamp with time zone null,
    description text null default ''::text,
    constraint movies_pkey primary key (id),
    constraint unique_name_release_date_description unique (name, release_date, description)
  ) tablespace pg_default;

create table
  public.predictions (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    predicted_ratings bigint null,
    predicted_views bigint null,
    box_office bigint null,
    constraint predictions_pkey primary key (id),
    constraint predictions_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.ratings (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    user_id bigint not null,
    rating bigint not null,
    constraint ratings_pkey primary key (id),
    constraint unique_user_id_movie_id_rating unique (user_id, movie_id),
    constraint ratings_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade,
    constraint ratings_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.roles (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    cast_id bigint not null,
    role text not null,
    constraint role_pkey primary key (id),
    constraint unique_movie_cast_role unique (movie_id, cast_id, role),
    constraint roles_cast_id_fkey foreign key (cast_id) references cast_and_crew (id) on update cascade on delete cascade,
    constraint roles_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.saved_movies (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    movie_id bigint not null,
    user_id bigint not null,
    constraint saved_movies_pkey primary key (id),
    constraint unique_saved_movies_movie_user unique (movie_id, user_id),
    constraint saved_movies_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade,
    constraint saved_movies_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.users (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    is_admin boolean not null default false,
    username text not null,
    constraint users_pkey primary key (id),
    constraint users_username_key unique (username)
  ) tablespace pg_default;

create table
  public.watched_movies (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    user_id bigint not null,
    movie_id bigint not null,
    constraint watched_movie_pkey primary key (id),
    constraint unique_user_id_movie_id unique (user_id, movie_id),
    constraint watched_movies_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade,
    constraint watched_movies_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;
  
/*
Data Used For v1_manual_testing/

INSERT INTO users (username) VALUES ('Rakesh');

INSERT INTO movies (name, genres, average_rating, budget, demographic, box_office, release_date ) VALUES ('Toy Story', ARRAY['Animation', 'Comedy', 'Family'], 0, 30000000, ARRAY[]::text[], 373554033, '1995-10-30 00:00:00+00');
INSERT INTO movies (name, genres, average_rating, budget, demographic, box_office, release_date ) VALUES ('Jumanji', ARRAY['Adventure', 'Fantasy', 'Family'], 0, 65000000, ARRAY[]::text[], 262797249, '1995-12-15 00:00:00+00');
INSERT INTO movies (name, genres, average_rating, budget, demographic, box_office, release_date ) VALUES ('Grumpier Old Men', ARRAY['Romance', 'Comedy'], 0, 0, ARRAY[]::text[], 0, '1995-12-22 00:00:00+00');
INSERT INTO movies (name, genres, average_rating, budget, demographic, box_office, release_date ) VALUES ('Waiting to Exhale', ARRAY['Comedy', 'Drama', 'Romance'], 0, 16000000, ARRAY[]::text[], 81452156, '1995-12-22 00:00:00+00');
INSERT INTO movies (name, genres, average_rating, budget, demographic, box_office, release_date ) VALUES ('Father of the Bride Part II', ARRAY['Comedy'], 0, 0, ARRAY[]::text[], 76578911, '1995-02-10 00:00:00+00');

INSERT INTO watched_movies (user_id, movie_id) VALUES (23, 1);
INSERT INTO watched_movies (user_id, movie_id) VALUES (23, 2);
INSERT INTO watched_movies (user_id, movie_id) VALUES (23, 5);
*/
  

